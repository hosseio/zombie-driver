// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package driver_zombie

import (
	"sync"
)

var (
	lockZombieConfigGetterMockGetZombieConfig sync.RWMutex
)

// Ensure, that ZombieConfigGetterMock does implement ZombieConfigGetter.
// If this is not the case, regenerate this file with moq.
var _ ZombieConfigGetter = &ZombieConfigGetterMock{}

// ZombieConfigGetterMock is a mock implementation of ZombieConfigGetter.
//
//     func TestSomethingThatUsesZombieConfigGetter(t *testing.T) {
//
//         // make and configure a mocked ZombieConfigGetter
//         mockedZombieConfigGetter := &ZombieConfigGetterMock{
//             GetZombieConfigFunc: func() ZombieConfigProjection {
// 	               panic("mock out the GetZombieConfig method")
//             },
//         }
//
//         // use mockedZombieConfigGetter in code that requires ZombieConfigGetter
//         // and then make assertions.
//
//     }
type ZombieConfigGetterMock struct {
	// GetZombieConfigFunc mocks the GetZombieConfig method.
	GetZombieConfigFunc func() ZombieConfigProjection

	// calls tracks calls to the methods.
	calls struct {
		// GetZombieConfig holds details about calls to the GetZombieConfig method.
		GetZombieConfig []struct {
		}
	}
}

// GetZombieConfig calls GetZombieConfigFunc.
func (mock *ZombieConfigGetterMock) GetZombieConfig() ZombieConfigProjection {
	if mock.GetZombieConfigFunc == nil {
		panic("ZombieConfigGetterMock.GetZombieConfigFunc: method is nil but ZombieConfigGetter.GetZombieConfig was just called")
	}
	callInfo := struct {
	}{}
	lockZombieConfigGetterMockGetZombieConfig.Lock()
	mock.calls.GetZombieConfig = append(mock.calls.GetZombieConfig, callInfo)
	lockZombieConfigGetterMockGetZombieConfig.Unlock()
	return mock.GetZombieConfigFunc()
}

// GetZombieConfigCalls gets all the calls that were made to GetZombieConfig.
// Check the length with:
//     len(mockedZombieConfigGetter.GetZombieConfigCalls())
func (mock *ZombieConfigGetterMock) GetZombieConfigCalls() []struct {
} {
	var calls []struct {
	}
	lockZombieConfigGetterMockGetZombieConfig.RLock()
	calls = mock.calls.GetZombieConfig
	lockZombieConfigGetterMockGetZombieConfig.RUnlock()
	return calls
}
